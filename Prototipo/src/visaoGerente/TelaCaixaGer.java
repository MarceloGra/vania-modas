/*
 * TelaCaixa.java
 *
 * Created on 23/10/2009, 10:28:19
 */
package visaoGerente;

import controlador.Controlador;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilitarios.DataSistema;
import utilitarios.Impressao;
import utilitarios.Sessao;

/**
 *
 * @author Hemerson e Jefferson
 */
public class TelaCaixaGer extends javax.swing.JFrame {

    Sessao sessao;
    Controlador controlador;
    //Exemplo entrada: valor#natureza#funcionario#horario
    //Exemplo saida: valor#natureza#funcionario#horario
    //Exemplo natureza: parcela/numeroParcela/codVenda/cliente
    //Exemplo natureza: avista/cliente (cliente ou nao)
    //Exemplo natureza: entrada/codVenda/cliente

    public TelaCaixaGer() {
        initComponents();
        sessao = new Sessao();
        controlador = new Controlador();
        this.setLocationRelativeTo(null);
    }

    public TelaCaixaGer(Sessao sessao, HashMap<String, Object> dados) {
        initComponents();
        this.sessao = new Sessao();
        this.sessao.setLogin(sessao.getLogin());
        this.sessao.setSenha(sessao.getSenha());
        timer1.start();
        controlador = new Controlador();
        this.construtor(dados);
        this.setLocationRelativeTo(null);
        if(dados != null){
            jButtonDespesa.setEnabled(false);
            jButtonAnterior.setEnabled(true);
            jButtonPrimeiro.setEnabled(true);
            jButtonProximo.setEnabled(true);
            jButtonUltimo.setEnabled(true);
        }else{
            jButtonDespesa.setEnabled(true);
            jButtonAnterior.setEnabled(false);
            jButtonPrimeiro.setEnabled(false);
            jButtonProximo.setEnabled(false);
            jButtonUltimo.setEnabled(false);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timer1 = new org.netbeans.examples.lib.timerbean.Timer();
        jDialogDespesa = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldFuncionario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldMotivo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldHorario = new javax.swing.JTextField();
        jTextFieldValor = new javax.swing.JTextField();
        jButtonIncluirDespesa = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonPrimeiro = new javax.swing.JButton();
        jButtonAnterior = new javax.swing.JButton();
        jButtonProximo = new javax.swing.JButton();
        jButtonUltimo = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonImprimir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMovimentacao = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabelLogin = new javax.swing.JLabel();
        jLabelData = new javax.swing.JLabel();
        jLabelHora = new javax.swing.JLabel();
        jLabelEmCaixa = new javax.swing.JLabel();
        jLabelEntradas = new javax.swing.JLabel();
        jLabelSaidas = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldData = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonDespesa = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        timer1.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                timer1OnTime(evt);
            }
        });

        jDialogDespesa.setTitle("Despesa");
        jDialogDespesa.setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Inclusao de despesa"));

        jLabel6.setText("Valor: ");

        jTextFieldFuncionario.setEditable(false);
        jTextFieldFuncionario.setFocusable(false);

        jLabel7.setText("Motivo: ");

        jTextFieldMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMotivoActionPerformed(evt);
            }
        });

        jLabel8.setText("Funcionario: ");

        jLabel9.setText("Horario: ");

        jTextFieldHorario.setEditable(false);
        jTextFieldHorario.setFocusable(false);

        jTextFieldValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValorActionPerformed(evt);
            }
        });
        jTextFieldValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldValorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValorFocusLost(evt);
            }
        });

        jButtonIncluirDespesa.setText("Incluir");
        jButtonIncluirDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirDespesaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                    .addGap(39, 39, 39)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMotivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldValor, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldHorario, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldFuncionario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))))
                    .addComponent(jButtonIncluirDespesa, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonIncluirDespesa)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialogDespesaLayout = new javax.swing.GroupLayout(jDialogDespesa.getContentPane());
        jDialogDespesa.getContentPane().setLayout(jDialogDespesaLayout);
        jDialogDespesaLayout.setHorizontalGroup(
            jDialogDespesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDespesaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogDespesaLayout.setVerticalGroup(
            jDialogDespesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDespesaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Caixa");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Navegacao/Operacao", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jButtonPrimeiro.setText("<");
        jButtonPrimeiro.setEnabled(false);
        jButtonPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrimeiroActionPerformed(evt);
            }
        });

        jButtonAnterior.setText("<<");
        jButtonAnterior.setEnabled(false);
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jButtonProximo.setText(">>");
        jButtonProximo.setEnabled(false);
        jButtonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProximoActionPerformed(evt);
            }
        });

        jButtonUltimo.setText(">");
        jButtonUltimo.setEnabled(false);
        jButtonUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUltimoActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonImprimir.setText("Imprimir");
        jButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonPrimeiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAnterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonProximo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUltimo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPrimeiro)
                    .addComponent(jButtonAnterior)
                    .addComponent(jButtonProximo)
                    .addComponent(jButtonUltimo)
                    .addComponent(jButtonImprimir)
                    .addComponent(jButtonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Movimentacao"));

        jTableMovimentacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Valor", "Natureza", "Cliente", "Funcionario", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMovimentacao);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("Usuario:");

        jLabelHora.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabelData, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabelEmCaixa.setText("R$ 000000.00");

        jLabelEntradas.setText("R$ 000000.00");

        jLabelSaidas.setText("R$ 000000.00");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTextFieldData.setEditable(false);
        jTextFieldData.setFont(new java.awt.Font("Tahoma", 0, 14));
        jTextFieldData.setForeground(new java.awt.Color(255, 0, 0));
        jTextFieldData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldData.setRequestFocusEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Data:");

        jTextFieldCodigo.setEditable(false);
        jTextFieldCodigo.setText(" ");
        jTextFieldCodigo.setFocusable(false);
        jTextFieldCodigo.setRequestFocusEnabled(false);

        jLabel1.setText("Codigo: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButtonDespesa.setText("Incluir Despesa");
        jButtonDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDespesaActionPerformed(evt);
            }
        });

        jLabel2.setText("Valor em Caixa: ");

        jLabel4.setText("Valor Entradas: ");

        jLabel5.setText("Valor Saidas: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonDespesa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 321, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelEmCaixa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelEntradas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelSaidas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSaidas)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEntradas)
                    .addComponent(jButtonDespesa)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirActionPerformed
        this.imprimir();
}//GEN-LAST:event_jButtonImprimirActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        new TelaPrincipalGer(sessao).show();
        this.dispose();
}//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrimeiroActionPerformed
        HashMap<String, Object> dados = new HashMap<String, Object>();
        dados.put("modelo", "caixa");
        dados.put("operacao", "busca");
        dados.put("posicao", "primeiro");
        dados.put("classificacao", "ordem");
        dados = controlador.recebeOperacao(dados);
        this.mostraDados(dados);
}//GEN-LAST:event_jButtonPrimeiroActionPerformed

    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        HashMap<String, Object> dados = new HashMap<String, Object>();
        dados.put("modelo", "caixa");
        dados.put("operacao", "busca");
        dados.put("posicao", "anterior");
        dados.put("classificacao", "ordem");
        dados.put("cod", jTextFieldCodigo.getText());
        dados = controlador.recebeOperacao(dados);
        this.mostraDados(dados);
}//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jButtonProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProximoActionPerformed
        HashMap<String, Object> dados = new HashMap<String, Object>();
        dados.put("modelo", "caixa");
        dados.put("operacao", "busca");
        dados.put("posicao", "proximo");
        dados.put("classificacao", "ordem");
        dados.put("cod", jTextFieldCodigo.getText());
        dados = controlador.recebeOperacao(dados);
        this.mostraDados(dados);
}//GEN-LAST:event_jButtonProximoActionPerformed

    private void jButtonUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUltimoActionPerformed
        HashMap<String, Object> dados = new HashMap<String, Object>();
        dados.put("modelo", "caixa");
        dados.put("operacao", "busca");
        dados.put("posicao", "ultimo");
        dados.put("classificacao", "ordem");
        dados = controlador.recebeOperacao(dados);
        this.mostraDados(dados);
}//GEN-LAST:event_jButtonUltimoActionPerformed

    private void timer1OnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timer1OnTime
        DataSistema d = DataSistema.getInstance();
        String g = d.diaMesAno();
        jLabelData.setText(g);
        String h = d.horaMinSeg();
        jLabelHora.setText(h);
    }//GEN-LAST:event_timer1OnTime

    private void jButtonDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDespesaActionPerformed
        jTextFieldFuncionario.setText(sessao.getLogin());
        jTextFieldHorario.setText(jLabelHora.getText());
        this.jDialogDespesa.setSize(355, 255);
        this.jDialogDespesa.setLocationRelativeTo(this);
        this.jDialogDespesa.setVisible(true);
        this.construtor(null);
    }//GEN-LAST:event_jButtonDespesaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new TelaPrincipalGer(sessao).show();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButtonIncluirDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirDespesaActionPerformed
        jTextFieldValor.setText(this.trataPreco(jTextFieldValor.getText()));
        if (!jTextFieldValor.getText().equals("") && !jTextFieldValor.getText().equals("erro") && !jTextFieldValor.getText().equals("0.00")) {
            if (!jTextFieldMotivo.getText().equals("")) {
                String str = this.atualizaCaixa();
                if (str.equals("sucesso")) {
                    this.limpaTudo();
                    jDialogDespesa.setVisible(false);
                } else {
                    this.limpaTudo();
                    JOptionPane.showMessageDialog(null, str);
                    jDialogDespesa.setVisible(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Descreva o motivo.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Insira um valor correto.");
        }
    }//GEN-LAST:event_jButtonIncluirDespesaActionPerformed

    private void jTextFieldValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValorActionPerformed
        jTextFieldValor.setText(this.trataPreco(jTextFieldValor.getText()));
        jTextFieldMotivo.requestFocus();
    }//GEN-LAST:event_jTextFieldValorActionPerformed

    private void jTextFieldValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorFocusLost
        jTextFieldValor.setText(this.trataPreco(jTextFieldValor.getText()));
    }//GEN-LAST:event_jTextFieldValorFocusLost

    private void jTextFieldMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMotivoActionPerformed
        jButtonIncluirDespesa.requestFocus();
    }//GEN-LAST:event_jTextFieldMotivoActionPerformed

    private void jTextFieldValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorFocusGained
        jTextFieldValor.setSelectionStart(0);
        jTextFieldValor.setSelectionEnd(jTextFieldValor.getText().length());
    }//GEN-LAST:event_jTextFieldValorFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TelaCaixaGer().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonDespesa;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JButton jButtonIncluirDespesa;
    private javax.swing.JButton jButtonPrimeiro;
    private javax.swing.JButton jButtonProximo;
    private javax.swing.JButton jButtonUltimo;
    private javax.swing.JDialog jDialogDespesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelEmCaixa;
    private javax.swing.JLabel jLabelEntradas;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelSaidas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMovimentacao;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldData;
    private javax.swing.JTextField jTextFieldFuncionario;
    private javax.swing.JTextField jTextFieldHorario;
    private javax.swing.JTextField jTextFieldMotivo;
    private javax.swing.JTextField jTextFieldValor;
    private org.netbeans.examples.lib.timerbean.Timer timer1;
    // End of variables declaration//GEN-END:variables

    private void imprimir() {
        Impressao impressao = new Impressao();
        impressao.imprimir(this.getModeloImprimir());
    }

    private void mostraDados(HashMap<String, Object> dados) {
        //Exemplo entrada: valor#natureza#funcionario#horario
        //Exemplo saida: valor#natureza#funcionario#horario
        //Exemplo natureza: parcela/numeroParcela/codVenda/cliente
        //Exemplo natureza: avista/codVenda/cliente
        //Exemplo natureza: entrada/codVenda/cliente
        //--valor-natureza-cliente-funcionario-hora
        jTextFieldCodigo.setText("" + dados.get("cod"));
        List entradas, saidas;
        this.limpaTabela();
        DefaultTableModel modelo = (DefaultTableModel) jTableMovimentacao.getModel();
        if (!dados.get("entradas").equals("")) {
            entradas = (List) dados.get("entradas");
            for (int i = 0; i < entradas.size(); i++) {
                String[] entra = ((String) entradas.get(i)).split("#");
                Object linha[];
                if (entra[1].split("/")[0].equals("parcela")) {
                    linha = new Object[]{entra[0], entra[1].split("/")[0] + "-No:" + entra[1].split("/")[1] +
                                "-Venda No:" + entra[1].split("/")[2], entra[1].split("/")[3], entra[2], entra[3]};
                } else {
                    linha = new Object[]{entra[0], entra[1].split("/")[0] + "-Venda No:" + entra[1].split("/")[1], entra[1].split("/")[2], entra[2], entra[3]};
                }
                modelo.addRow(linha);
            }
        }
        if (!dados.get("saidas").equals("")) {
            saidas = (List) dados.get("saidas");
            for (int i = 0; i < saidas.size(); i++) {
                String[] saida = ((String) saidas.get(i)).split("#");
                Object linha[] = new Object[]{saida[0], saida[1], "", saida[2], saida[3]};
                modelo.addRow(linha);
            }
        }
        jTextFieldData.setText(dados.get("data") + "");
        jLabelEntradas.setText("R$ " + dados.get("valorTotalEntrada") + "0");
        jLabelSaidas.setText("R$ " + dados.get("valorTotalSaida") + "0");
        double s = Double.parseDouble(dados.get("valorTotalSaida") + ""), e = Double.parseDouble(dados.get("valorTotalEntrada") + "");
        s = e - s;
        s += 150.00;
        jLabelEmCaixa.setText("R$ " + this.trataPreco(s + ""));
    }

    private void construtor(HashMap<String, Object> dados) {
        try {
            if (dados == null) {
                dados = new HashMap<String, Object>();
                dados.put("modelo", "caixa");
                dados.put("operacao", "busca");
                dados.put("posicao", "data");
                dados.put("data", DataSistema.getInstance().diaMesAno().split(" ")[1]);
                dados = controlador.recebeOperacao(dados);
                if (dados == null) {//sem movimentacao
                    dados = new HashMap<String, Object>();
                    dados.put("modelo", "caixa");
                    dados.put("operacao", "maiorId");
                    dados = controlador.recebeOperacao(dados);
                    if (dados != null) {
                        String cod = dados.get("retorno") + "";
                        dados = new HashMap<String, Object>();
                        dados.put("data", DataSistema.getInstance().diaMesAno().split(" ")[1]);
                        dados.put("modelo", "caixa");
                        dados.put("operacao", "inserir");
                        dados.put("saidas", "");
                        dados.put("entradas", "");
                        dados.put("cod", cod);
                        dados = controlador.recebeOperacao(dados);
                        dados = new HashMap<String, Object>();
                        dados.put("modelo", "caixa");
                        dados.put("operacao", "busca");
                        dados.put("posicao", "data");
                        dados.put("data", DataSistema.getInstance().diaMesAno().split(" ")[1]);
                        dados = controlador.recebeOperacao(dados);
                    }
                }
            }
            this.mostraDados(dados);
        } catch (Exception e) {
        }
        jLabelLogin.setText(this.sessao.getLogin());
        jTableMovimentacao.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTableMovimentacao.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTableMovimentacao.getColumnModel().getColumn(2).setPreferredWidth(10);
        jTableMovimentacao.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTableMovimentacao.getColumnModel().getColumn(4).setPreferredWidth(20);
    }

    private void limpaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) jTableMovimentacao.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    private String trataPreco(String valor) {
        try {
            valor = valor.replace(',', '.');
        } catch (Exception e) {
            return "0.00";
        }
        try {
            Double.parseDouble(valor);
            if (valor.equals("")) {
                return "0.00";
            } else {
                String depois = valor.substring(valor.lastIndexOf(".") + 1);
                String antes = valor.substring(0, valor.lastIndexOf(".") + 1);
                if (antes.compareTo("") == 0) {
                    antes = depois + ".";
                    depois = "";
                } else {
                    if (antes.compareTo(".") == 0) {
                        antes = "0" + antes;
                    }
                }
                if (depois.length() < 2) {
                    while (depois.length() < 2) {
                        depois += "0";
                    }
                }
                return antes + depois;
            }
        } catch (NumberFormatException numberFormatException) {
            return "erro";
        }
    }

    private String atualizaCaixa() {
        //incluir um caixa do dia se este ja' nao estiver...
        //considerando que um caixa comeca com 150,00 reais
        HashMap<String, Object> caixa = new HashMap<String, Object>();
        String date = jLabelData.getText().split(" ")[1];
        List saida = new ArrayList();
        caixa.put("data", date);
        caixa.put("modelo", "caixa");
        caixa.put("operacao", "busca");
        caixa.put("posicao", "data");
        caixa = controlador.recebeOperacao(caixa);
        if (caixa == null) {
            //inserir venda
            caixa = new HashMap<String, Object>();
            caixa.put("modelo", "caixa");
            caixa.put("operacao", "maiorId");
            caixa = controlador.recebeOperacao(caixa);
            if (caixa != null) {
                String cod = caixa.get("retorno") + "";
                caixa = new HashMap<String, Object>();
                caixa.put("data", date);
                caixa.put("modelo", "caixa");
                caixa.put("operacao", "inserir");
                caixa.put("saidas", "");
                caixa.put("cod", cod);
            }
        } else {
            double s, e, gasto = Double.parseDouble(jTextFieldValor.getText());
            try {
                s = Double.parseDouble((String) caixa.get("valorTotalSaida"));
            } catch (NumberFormatException numberFormatException) {
                s = 0.0;
            }
            try {
                e = Double.parseDouble((String) caixa.get("valorTotalEntrada"));
            } catch (NumberFormatException numberFormatException) {
                e = 0.0;
            }
            if ((e+150.0) >= (s + gasto)) {
                List entrada;
                if (!caixa.get("entradas").equals("")) {
                    entrada = (List) caixa.get("entradas");
                } else {
                    entrada = null;
                }
                if (!caixa.get("saidas").equals("")) {
                    saida = (List) caixa.get("saidas");
                } else {
                    saida = new ArrayList();
                }
                String dataAntigo = (String) caixa.get("data");
                String cod = (String) caixa.get("cod");
                caixa = new HashMap<String, Object>();
                caixa.put("modelo", "caixa");
                caixa.put("operacao", "alterar");
                caixa.put("cod", cod);
                caixa.put("data", dataAntigo);
                if (entrada == null) {
                    caixa.put("entradas", "");
                } else {
                    caixa.put("entradas", entrada);
                }
                List aux = new ArrayList();
                for (int i = 0; i < saida.size(); i++) {
                    aux.add(saida.get(i));
                }
                String add = jTextFieldValor.getText() + "#Desp:" + jTextFieldMotivo.getText() + "#" +
                        jTextFieldFuncionario.getText() + "#" + jTextFieldHorario.getText();
                aux.add(add);//adiciona o recebimento
                caixa.put("saidas", aux);
                caixa = controlador.recebeOperacao(caixa);
                JOptionPane.showMessageDialog(null, caixa.get("retorno"));
                this.jDialogDespesa.setVisible(false);
                this.construtor(null);
                return "sucesso";
            } else {
                return "Erro: Nao ha dinheiro disponivel em caixa";
            }
        }
        return "Erro: Impossivel armazenar despesa";
        //Exemplo entrada: valor#natureza#funcionario#horario
        //Exemplo saida: valor#natureza#funcionario#horario
        //Exemplo natureza: parcela/numeroParcela/codVenda/cliente
        //Exemplo natureza: avista/cliente (cliente ou nao)
        //Exemplo natureza: entrada/codVenda/cliente
    }

    private String getModeloImprimir() {
        HashMap<String, Object> dados = new HashMap<String, Object>();
        String date = jLabelData.getText().split(" ")[1];
        List saida = new ArrayList();
        dados.put("data", date);
        dados.put("modelo", "caixa");
        dados.put("operacao", "busca");
        dados.put("posicao", "data");
        dados = controlador.recebeOperacao(dados);
        if (dados == null) {
            return null;
        } else {
            String impri = "";
            impri += "|============================================================|\n";
            impri += " VANIA MODAS  ";
            impri += " RELATORIO DO CAIXA DO DIA: "+dados.get("data")+"\n";
            impri += " Horario: " + jLabelHora.getText() + "  ";
            impri += " Data: " + jLabelData.getText().split(" ")[1] + "\n";
            impri += "|------------------------------------------------------------|\n";
            impri += "  VALOR  |           NATUREZA           |CLIENTE|  FUN |HORA \n";
            //8--30--7--6--5
            List lista;
            if (!dados.get("entradas").equals("")) {
                lista = (List) dados.get("entradas");
            } else {
                lista = new ArrayList();
            }
            String str = "";
            for (int i = 0; i < lista.size(); i++) {
                String[] entra = ((String) lista.get(i)).split("#");
                String aux;
                str += " ";
                aux = this.trataPreco(entra[0]);
                String preencher = "";
                for (int k = 0; k < (8 - aux.length()); k++) {
                    preencher += " ";
                }
                str += preencher + aux + "|";
                String cliente = "";
                if (entra[1].split("/")[0].equals("parcela")) {
                    aux = entra[1].split("/")[0] + "No:" + entra[1].split("/")[1] + "Venda:" + entra[1].split("/")[2];
                    cliente = entra[1].split("/")[3];
                } else {
                    aux = entra[1].split("/")[0] + "Venda:" + entra[1].split("/")[1];
                    cliente = entra[1].split("/")[2];
                }
                preencher = "";
                for (int k = 0; k < (30 - aux.length()); k++) {
                    preencher += " ";
                }
                str += aux + preencher + "|";

                aux = cliente;
                preencher = "";
                for (int k = 0; k < (7 - aux.length()); k++) {
                    preencher += " ";
                }
                str += preencher + aux + "|";

                aux = entra[2];
                preencher = "";
                for (int k = 0; k < (6 - aux.length()); k++) {
                    preencher += " ";
                }
                if(aux.length() > 6){
                    for (int j = 0; j < 6; j++) {
                        str += aux.charAt(j);

                    }
                    str += "|";
                }else{
                    str += preencher +aux +  "|";
                }


                aux = entra[3].split(":")[0]+":"+entra[3].split(":")[1];
                preencher = "";
                for (int k = 0; k < (5 - aux.length()); k++) {
                    preencher += " ";
                }
                str += aux + preencher + "\n";
            }
            if (!dados.get("saidas").equals("")) {
                lista = (List) dados.get("saidas");
            } else {
                lista = new ArrayList();
            }
            for (int i = 0; i < lista.size(); i++) {
                String[] entra = ((String) lista.get(i)).split("#");
                String aux;
                str += "-";
                aux = this.trataPreco(entra[0]);
                String preencher = "";
                for (int k = 0; k < (8 - aux.length()); k++) {
                    preencher += " ";
                }
                str += preencher + aux + "|";
                preencher = "";
                aux = entra[1];
                if (aux.length() > 30) {
                    for (int j = 0; j < 30; j++) {
                        str += aux.charAt(j);
                    }
                    str += "|";
                } else {
                    for (int k = 0; k < (30 - aux.length()); k++) {
                        preencher += " ";
                    }
                    str += aux + preencher + "|";
                }
                preencher = "";
                for (int k = 0; k < 7; k++) {
                    preencher += " ";
                }
                str += preencher + "|";
                aux = entra[2];
                preencher = "";
                for (int k = 0; k < (6 - aux.length()); k++) {
                    preencher += " ";
                }
                if(aux.length() > 6){
                    for (int j = 0; j < 6; j++) {
                        str += aux.charAt(j);

                    }
                    str += "|";
                }else{
                    str += preencher +aux +  "|";
                }
                aux = entra[3].split(":")[0]+":"+entra[3].split(":")[1];
                preencher = "";
                for (int k = 0; k < (5 - aux.length()); k++) {
                    preencher += " ";
                }
                str += aux + preencher + "\n";
            }
            impri += str;
            impri += "|------------------------------------------------------------|\n";
            double e = Double.parseDouble(this.trataPreco(dados.get("valorTotalEntrada") + ""));
            double s = Double.parseDouble(this.trataPreco(dados.get("valorTotalSaida") + ""));
            impri += " Total Recebido: R$ " + this.trataPreco(e + "") + "\n";
            impri += " Total Retirado: R$" + this.trataPreco(s + "") + " \n";
            impri += " Total em Caixa: R$ " + this.trataPreco((e - s) + "") + " + R$150,00 = R$" + this.trataPreco((e + 150.00) + "") + "\n";
            impri += "|============================================================|\n";
            return impri;
        }
        //Exemplo entrada: valor#natureza#funcionario#horario
        //Exemplo saida: valor#natureza#funcionario#horario
        //Exemplo natureza: parcela/numeroParcela/codVenda/cliente
        //Exemplo natureza: avista/cliente (cliente ou nao)
        //Exemplo natureza: entrada/codVenda/cliente
    }

    private void limpaTudo() {
        jTextFieldFuncionario.setText("");
        jTextFieldHorario.setText("");
        jTextFieldMotivo.setText("");
        jTextFieldValor.setText("");
    }
}
